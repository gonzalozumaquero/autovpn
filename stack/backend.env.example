# ===========================
# AutoVPN Backend (.env) — Template Ansible
# Se renderiza desde ansible/roles/autovpn_stack con variables de group_vars/cloud.yml
# ===========================

# Modo de ejecución del backend (servidor del panel)
APP_MODE=server

# Zona horaria del contenedor
TZ={{ timezone }}

# ===========================
# WireGuard / Orquestación
# ===========================
# Dónde corre WireGuard (host vs contenedor)
WG_MODE=container
WG_CONTAINER_NAME=wireguard

# Parámetros del servidor WG y red
WG_PUBLIC_HOST={{ wg_public_host }}
WG_PORT={{ wg_port }}
WG_SUBNET={{ wg_subnet }}
WG_DNS={{ wg_dns }}

# ===========================
# Autenticación / Seguridad
# ===========================
# Secreto JWT del backend (base64-url fuerte)
JWT_SECRET={{ jwt_secret }}

# Credenciales del admin inicial (hash ya calculado en Ansible)
ADMIN_EMAIL={{ admin_email }}
ADMIN_PASSWORD_HASH={{ admin_password_hash }}

# Tiempos de vida de tokens
JWT_ACCESS_TTL_MIN=15
JWT_REFRESH_TTL_DAYS=7

# ===========================
# Transporte / Perfiles anti-DPI (opcional)
# ===========================
# mode: auto | manual
TRANSPORT_MODE={{ transport.mode }}
# profile (si manual): WG_UDP_51820 | WG_UDP_443 | WG_UDP2RAW_443
TRANSPORT_PROFILE={{ transport.profile | default('') }}

# udp2raw (solo si TRANSPORT_PROFILE=WG_UDP2RAW_443)
UDP2RAW_ENABLED={{ transport.udp2raw.enabled | default(false) }}
UDP2RAW_PASSWORD={{ transport.udp2raw.password | default('') }}
UDP2RAW_MTU={{ transport.udp2raw.mtu | default('') }}

LOG_LEVEL=info
INTERNAL_LOOPBACK_HOST={{ internal_loopback_host }}

